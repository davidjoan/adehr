<?php

/**
 * BaseMedia
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $media_type_id
 * @property string $name
 * @property string $album_picasa_name
 * @property string $path
 * @property integer $size
 * @property string $full_mime
 * @property integer $rank
 * @property string $active
 * @property MediaType $MediaType
 * @property Doctrine_Collection $Posts
 * @property Doctrine_Collection $PostMedia
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method integer             getMediaTypeId()       Returns the current record's "media_type_id" value
 * @method string              getName()              Returns the current record's "name" value
 * @method string              getAlbumPicasaName()   Returns the current record's "album_picasa_name" value
 * @method string              getPath()              Returns the current record's "path" value
 * @method integer             getSize()              Returns the current record's "size" value
 * @method string              getFullMime()          Returns the current record's "full_mime" value
 * @method integer             getRank()              Returns the current record's "rank" value
 * @method string              getActive()            Returns the current record's "active" value
 * @method MediaType           getMediaType()         Returns the current record's "MediaType" value
 * @method Doctrine_Collection getPosts()             Returns the current record's "Posts" collection
 * @method Doctrine_Collection getPostMedia()         Returns the current record's "PostMedia" collection
 * @method Media               setId()                Sets the current record's "id" value
 * @method Media               setMediaTypeId()       Sets the current record's "media_type_id" value
 * @method Media               setName()              Sets the current record's "name" value
 * @method Media               setAlbumPicasaName()   Sets the current record's "album_picasa_name" value
 * @method Media               setPath()              Sets the current record's "path" value
 * @method Media               setSize()              Sets the current record's "size" value
 * @method Media               setFullMime()          Sets the current record's "full_mime" value
 * @method Media               setRank()              Sets the current record's "rank" value
 * @method Media               setActive()            Sets the current record's "active" value
 * @method Media               setMediaType()         Sets the current record's "MediaType" value
 * @method Media               setPosts()             Sets the current record's "Posts" collection
 * @method Media               setPostMedia()         Sets the current record's "PostMedia" collection
 * 
 * @package    adehr
 * @subpackage model
 * @author     David Joan Tataje Mendoza <new.skin007@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMedia extends DoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('t_media');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'length' => 20,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('media_type_id', 'integer', 20, array(
             'type' => 'integer',
             'length' => 20,
             'notnull' => true,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             'notnull' => true,
             ));
        $this->hasColumn('album_picasa_name', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             'notnull' => true,
             ));
        $this->hasColumn('path', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'notnull' => true,
             ));
        $this->hasColumn('size', 'integer', 10, array(
             'type' => 'integer',
             'length' => 10,
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('full_mime', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             'notnull' => true,
             ));
        $this->hasColumn('rank', 'integer', 5, array(
             'type' => 'integer',
             'length' => 5,
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('active', 'string', 1, array(
             'type' => 'string',
             'length' => 1,
             'fixed' => 1,
             'notnull' => true,
             'default' => 1,
             ));


        $this->index('u_name', array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'type' => 'unique',
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => true,
             ));
        $this->option('boolean_columns', array(
             0 => 'active',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('MediaType', array(
             'local' => 'media_type_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('Post as Posts', array(
             'refClass' => 'PostMedia',
             'local' => 'media_type_id',
             'foreign' => 'post_id'));

        $this->hasMany('PostMedia', array(
             'local' => 'id',
             'foreign' => 'media_id'));

        $sluggableext0 = new Doctrine_Template_SluggableExt(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($sluggableext0);
        $this->actAs($timestampable0);
    }
}