<?php

/**
 * BasePostPhoto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $post_id
 * @property integer $photo_id
 * @property Post $Post
 * @property Photo $Photo
 * 
 * @method integer   getPostId()   Returns the current record's "post_id" value
 * @method integer   getPhotoId()  Returns the current record's "photo_id" value
 * @method Post      getPost()     Returns the current record's "Post" value
 * @method Photo     getPhoto()    Returns the current record's "Photo" value
 * @method PostPhoto setPostId()   Sets the current record's "post_id" value
 * @method PostPhoto setPhotoId()  Sets the current record's "photo_id" value
 * @method PostPhoto setPost()     Sets the current record's "Post" value
 * @method PostPhoto setPhoto()    Sets the current record's "Photo" value
 * 
 * @package    adehr
 * @subpackage model
 * @author     David Joan Tataje Mendoza <new.skin007@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePostPhoto extends DoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('t_post_photo');
        $this->hasColumn('post_id', 'integer', 20, array(
             'type' => 'integer',
             'length' => 20,
             'primary' => true,
             ));
        $this->hasColumn('photo_id', 'integer', 20, array(
             'type' => 'integer',
             'length' => 20,
             'primary' => true,
             ));

        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Post', array(
             'local' => 'post_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('Photo', array(
             'local' => 'photo_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'updated' => 
             array(
              'disabled' => true,
             ),
             ));
        $this->actAs($timestampable0);
    }
}